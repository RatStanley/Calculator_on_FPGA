/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("DataA")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("DataA[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DataA";
}

SIGNAL("DataA[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DataA";
}

SIGNAL("DataA[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DataA";
}

SIGNAL("DataA[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DataA";
}

SIGNAL("DataA[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DataA";
}

SIGNAL("DataA[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DataA";
}

SIGNAL("DataA[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DataA";
}

SIGNAL("DataA[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DataA";
}

SIGNAL("DataB")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("DataB[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DataB";
}

SIGNAL("DataB[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DataB";
}

SIGNAL("DataB[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DataB";
}

SIGNAL("DataB[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DataB";
}

SIGNAL("DataB[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DataB";
}

SIGNAL("DataB[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DataB";
}

SIGNAL("DataB[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DataB";
}

SIGNAL("DataB[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DataB";
}

SIGNAL("Out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Out";
}

SIGNAL("Out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Out";
}

SIGNAL("Out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Out";
}

SIGNAL("Out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Out";
}

SIGNAL("Out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Out";
}

SIGNAL("Out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Out";
}

SIGNAL("Out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Out";
}

SIGNAL("Out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Out";
}

TRANSITION_LIST("DataA[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 590.0;
	}
}

TRANSITION_LIST("DataA[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 590.0;
	}
}

TRANSITION_LIST("DataA[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 110.0;
		LEVEL 0 FOR 860.0;
	}
}

TRANSITION_LIST("DataA[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 110.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 110.0;
		LEVEL 0 FOR 350.0;
	}
}

TRANSITION_LIST("DataA[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 110.0;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 460.0;
	}
}

TRANSITION_LIST("DataA[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 110.0;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 190.0;
		LEVEL 0 FOR 350.0;
	}
}

TRANSITION_LIST("DataA[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 460.0;
	}
}

TRANSITION_LIST("DataA[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 190.0;
		LEVEL 0 FOR 350.0;
	}
}

TRANSITION_LIST("DataB[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("DataB[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 640.0;
	}
}

TRANSITION_LIST("DataB[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 640.0;
	}
}

TRANSITION_LIST("DataB[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("DataB[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 840.0;
	}
}

TRANSITION_LIST("DataB[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 820.0;
	}
}

TRANSITION_LIST("DataB[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 140.0;
		LEVEL 0 FOR 840.0;
	}
}

TRANSITION_LIST("DataB[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 360.0;
		LEVEL 1 FOR 640.0;
	}
}

TRANSITION_LIST("Out[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 31.2;
		LEVEL 0 FOR 140.981;
		LEVEL 1 FOR 20.246;
		LEVEL 0 FOR 807.573;
	}
}

TRANSITION_LIST("Out[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 31.071;
		LEVEL 0 FOR 140.625;
		LEVEL 1 FOR 20.246;
		LEVEL 0 FOR 808.058;
	}
}

TRANSITION_LIST("Out[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 32.55;
		LEVEL 0 FOR 141.398;
		LEVEL 1 FOR 17.969;
		LEVEL 0 FOR 181.724;
		LEVEL 1 FOR 48.198;
		LEVEL 0 FOR 578.161;
	}
}

TRANSITION_LIST("Out[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 33.018;
		LEVEL 0 FOR 142.729;
		LEVEL 1 FOR 15.613;
		LEVEL 0 FOR 179.776;
		LEVEL 1 FOR 5.387;
		LEVEL 0 FOR 1.989;
		LEVEL 1 FOR 0.553;
		LEVEL 0 FOR 46.105;
		LEVEL 1 FOR 1.54;
		LEVEL 0 FOR 573.29;
	}
}

TRANSITION_LIST("Out[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 38.024;
		LEVEL 0 FOR 138.909;
		LEVEL 1 FOR 14.044;
		LEVEL 0 FOR 181.343;
		LEVEL 1 FOR 4.787;
		LEVEL 0 FOR 0.575;
		LEVEL 1 FOR 4.812;
		LEVEL 0 FOR 0.329;
		LEVEL 1 FOR 0.553;
		LEVEL 0 FOR 0.142;
		LEVEL 1 FOR 2.434;
		LEVEL 0 FOR 0.553;
		LEVEL 1 FOR 41.767;
		LEVEL 0 FOR 1.209;
		LEVEL 1 FOR 2.235;
		LEVEL 0 FOR 0.894;
		LEVEL 1 FOR 1.052;
		LEVEL 0 FOR 566.338;
	}
}

TRANSITION_LIST("Out[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 33.154;
		LEVEL 0 FOR 0.905;
		LEVEL 1 FOR 8.607;
		LEVEL 0 FOR 3.234;
		LEVEL 1 FOR 109.526;
		LEVEL 0 FOR 21.455;
		LEVEL 1 FOR 14.451;
		LEVEL 0 FOR 0.558;
		LEVEL 1 FOR 0.359;
		LEVEL 0 FOR 179.083;
		LEVEL 1 FOR 13.005;
		LEVEL 0 FOR 1.183;
		LEVEL 1 FOR 1.09;
		LEVEL 0 FOR 0.526;
		LEVEL 1 FOR 0.329;
		LEVEL 0 FOR 3.129;
		LEVEL 1 FOR 0.553;
		LEVEL 0 FOR 34.333;
		LEVEL 1 FOR 12.307;
		LEVEL 0 FOR 117.382;
		LEVEL 1 FOR 110.0;
		LEVEL 0 FOR 334.831;
	}
}

TRANSITION_LIST("Out[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 33.094;
		LEVEL 0 FOR 0.97;
		LEVEL 1 FOR 3.363;
		LEVEL 0 FOR 0.617;
		LEVEL 1 FOR 120.908;
		LEVEL 0 FOR 15.534;
		LEVEL 1 FOR 16.579;
		LEVEL 0 FOR 1.606;
		LEVEL 1 FOR 1.421;
		LEVEL 0 FOR 1.232;
		LEVEL 1 FOR 1.013;
		LEVEL 0 FOR 70.473;
		LEVEL 1 FOR 121.474;
		LEVEL 0 FOR 0.372;
		LEVEL 1 FOR 1.901;
		LEVEL 0 FOR 1.914;
		LEVEL 1 FOR 0.553;
		LEVEL 0 FOR 0.706;
		LEVEL 1 FOR 0.553;
		LEVEL 0 FOR 0.399;
		LEVEL 1 FOR 0.553;
		LEVEL 0 FOR 30.016;
		LEVEL 1 FOR 7.053;
		LEVEL 0 FOR 0.456;
		LEVEL 1 FOR 8.974;
		LEVEL 0 FOR 32.662;
		LEVEL 1 FOR 79.419;
		LEVEL 0 FOR 0.781;
		LEVEL 1 FOR 4.099;
		LEVEL 0 FOR 106.611;
		LEVEL 1 FOR 3.81;
		LEVEL 0 FOR 330.884;
	}
}

TRANSITION_LIST("Out[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 49.931;
		LEVEL 0 FOR 106.688;
		LEVEL 1 FOR 0.208;
		LEVEL 0 FOR 0.488;
		LEVEL 1 FOR 2.394;
		LEVEL 0 FOR 0.436;
		LEVEL 1 FOR 3.814;
		LEVEL 0 FOR 13.581;
		LEVEL 1 FOR 13.893;
		LEVEL 0 FOR 0.957;
		LEVEL 1 FOR 0.859;
		LEVEL 0 FOR 2.039;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 1.033;
		LEVEL 1 FOR 1.471;
		LEVEL 0 FOR 70.18;
		LEVEL 1 FOR 1.326;
		LEVEL 0 FOR 102.892;
		LEVEL 1 FOR 23.253;
		LEVEL 0 FOR 0.348;
		LEVEL 1 FOR 5.55;
		LEVEL 0 FOR 23.682;
		LEVEL 1 FOR 16.847;
		LEVEL 0 FOR 0.766;
		LEVEL 1 FOR 5.204;
		LEVEL 0 FOR 27.183;
		LEVEL 1 FOR 83.756;
		LEVEL 0 FOR 0.624;
		LEVEL 1 FOR 5.288;
		LEVEL 0 FOR 101.101;
		LEVEL 1 FOR 9.43;
		LEVEL 0 FOR 324.578;
	}
}

DISPLAY_LINE
{
	CHANNEL = "DataA";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4, 5, 6, 7, 8;
}

DISPLAY_LINE
{
	CHANNEL = "DataA[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DataA[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DataA[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DataA[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DataA[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DataA[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DataA[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DataA[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DataB";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
	CHILDREN = 10, 11, 12, 13, 14, 15, 16, 17;
}

DISPLAY_LINE
{
	CHANNEL = "DataB[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "DataB[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "DataB[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "DataB[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "DataB[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "DataB[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "DataB[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "DataB[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "Out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
	CHILDREN = 19, 20, 21, 22, 23, 24, 25, 26;
}

DISPLAY_LINE
{
	CHANNEL = "Out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "Out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "Out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "Out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "Out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "Out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "Out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "Out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 18;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
